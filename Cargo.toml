[workspace]
members = [
    ".",
    "sqlx-core",
    "sqlx-rt",
    "sqlx-macros",
    "sqlx-test",
    "sqlx-cli",
    "sqlx-bench",
    "examples/mysql/todos",
    "examples/postgres/listen",
    "examples/postgres/todos",
    "examples/sqlite/todos",
    "examples/realworld",
]

[package]
name = "sqlx"
version = "0.4.0-pre"
license = "MIT OR Apache-2.0"
readme = "README.md"
repository = "https://github.com/launchbadge/sqlx"
documentation = "https://docs.rs/sqlx"
description = "ðŸ§° The Rust SQL Toolkit. An async, pure Rust SQL crate featuring compile-time checked queries without a DSL. Supports PostgreSQL, MySQL, and SQLite."
edition = "2018"
keywords = [ "database", "async", "postgres", "mysql", "sqlite" ]
categories = [ "database", "asynchronous" ]
authors = [
    "Ryan Leckey <leckey.ryan@gmail.com>", # ryan@launchbadge.com
    "Austin Bonander <austin.bonander@gmail.com>", # austin@launchbadge.com
    "Chloe Ross <orangesnowfox@gmail.com>", # zach@launchbadge.com
    "Daniel Akhterov <akhterovd@gmail.com>", # daniel@launchbadge.com
]

[package.metadata.docs.rs]
features = [ "all" ]
rustdoc-args = ["--cfg", "docsrs"]

[features]
default = [ "macros", "runtime-async-std-native-tls", "migrate" ]
macros = [ "sqlx-macros" ]
migrate = [ "sqlx-core/migrate" ]

# [deprecated] TLS is not possible to disable due to it being conditional on multiple features
#              Hopefully Cargo can handle this in the future
tls = [ ]

# offline building support in `sqlx-macros`
offline = [ "sqlx-macros/offline", "sqlx-core/offline" ]

# intended mainly for CI and docs
all = [ "tls", "all-databases", "all-types" ]
all-databases = [ "mysql", "sqlite", "postgres", "mssql", "any" ]
all-types = [ "bigdecimal", "decimal", "json", "time", "chrono", "ipnetwork", "uuid" ]

# runtime
runtime-async-std-native-tls = [ "sqlx-core/runtime-async-std-native-tls", "sqlx-macros/runtime-async-std-native-tls" ]
runtime-actix-native-tls = [ "sqlx-core/runtime-actix-native-tls", "sqlx-macros/runtime-actix-native-tls" ]
runtime-tokio-native-tls = [ "sqlx-core/runtime-tokio-native-tls", "sqlx-macros/runtime-tokio-native-tls" ]

# database
any = [ "sqlx-core/any" ]
postgres = [ "sqlx-core/postgres", "sqlx-macros/postgres" ]
mysql = [ "sqlx-core/mysql", "sqlx-macros/mysql" ]
sqlite = [ "sqlx-core/sqlite", "sqlx-macros/sqlite" ]
mssql = [ "sqlx-core/mssql", "sqlx-macros/mssql" ]

# types
bigdecimal = [ "sqlx-core/bigdecimal", "sqlx-macros/bigdecimal" ]
decimal = [ "sqlx-core/decimal", "sqlx-macros/decimal" ]
chrono = [ "sqlx-core/chrono", "sqlx-macros/chrono" ]
ipnetwork = [ "sqlx-core/ipnetwork", "sqlx-macros/ipnetwork" ]
uuid = [ "sqlx-core/uuid", "sqlx-macros/uuid" ]
json = [ "sqlx-core/json", "sqlx-macros/json" ]
time = [ "sqlx-core/time", "sqlx-macros/time" ]

[dependencies]
sqlx-core = { version = "0.4.0-pre", path = "sqlx-core", default-features = false }
sqlx-macros = { version = "0.4.0-pre", path = "sqlx-macros", default-features = false, optional = true }

[dev-dependencies]
anyhow = "1.0.31"
time_ = { version = "0.2.16", package = "time" }
futures = "0.3.5"
env_logger = "0.7.1"
async-std = { version = "1.6.0", features = [ "attributes" ] }
tokio = { version = "0.2.21", features = [ "full" ] }
dotenv = "0.15.0"
trybuild = "1.0.24"
sqlx-rt = { path = "./sqlx-rt" }
sqlx-test = { path = "./sqlx-test" }
paste = "0.1.16"
serde = { version = "1.0.111", features = [ "derive" ] }
serde_json = "1.0.53"
url = "2.1.1"

#
# Any
#

[[test]]
name = "any"
path = "tests/any/any.rs"
required-features = [ "any" ]

[[test]]
name = "any-pool"
path = "tests/any/pool.rs"
required-features = [ "any" ]

#
# SQLite
#

[[test]]
name = "sqlite"
path = "tests/sqlite/sqlite.rs"
required-features = [ "sqlite" ]

[[test]]
name = "sqlite-types"
path = "tests/sqlite/types.rs"
required-features = [ "sqlite" ]

[[test]]
name = "sqlite-describe"
path = "tests/sqlite/describe.rs"
required-features = [ "sqlite" ]

[[test]]
name = "sqlite-macros"
path = "tests/sqlite/macros.rs"
required-features = [ "sqlite", "macros" ]

#
# MySQL
#

[[test]]
name = "mysql"
path = "tests/mysql/mysql.rs"
required-features = [ "mysql" ]

[[test]]
name = "mysql-types"
path = "tests/mysql/types.rs"
required-features = [ "mysql" ]

[[test]]
name = "mysql-describe"
path = "tests/mysql/describe.rs"
required-features = [ "mysql" ]

[[test]]
name = "mysql-macros"
path = "tests/mysql/macros.rs"
required-features = [ "mysql", "macros" ]

#
# PostgreSQL
#

[[test]]
name = "postgres"
path = "tests/postgres/postgres.rs"
required-features = [ "postgres" ]

[[test]]
name = "postgres-types"
path = "tests/postgres/types.rs"
required-features = [ "postgres" ]

[[test]]
name = "postgres-describe"
path = "tests/postgres/describe.rs"
required-features = [ "postgres" ]

[[test]]
name = "postgres-macros"
path = "tests/postgres/macros.rs"
required-features = [ "postgres", "macros" ]

[[test]]
name = "postgres-derives"
path = "tests/postgres/derives.rs"
required-features = [ "postgres", "macros" ]

#
# Microsoft SQL Server (MSSQL)
#

[[test]]
name = "mssql"
path = "tests/mssql/mssql.rs"
required-features = [ "mssql" ]

[[test]]
name = "mssql-types"
path = "tests/mssql/types.rs"
required-features = [ "mssql" ]

[[test]]
name = "mssql-describe"
path = "tests/mssql/describe.rs"
required-features = [ "mssql" ]

[[test]]
name = "mssql-macros"
path = "tests/mssql/macros.rs"
required-features = [ "mssql", "macros" ]
